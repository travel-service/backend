{"version":3,"sources":["lib/router/ProtectedRoute.js","App.js","lib/custom/useScroll.js","reportWebVitals.js","lib/redux/modules/plan.js","lib/redux/modules/index.js","lib/interceptors/axios.js","index.js","lib/redux/createRequestSaga.js","lib/api/auth.js","lib/redux/modules/user.js","lib/redux/modules/loading.js","lib/custom/Spinner.js","lib/styles/palette.js","lib/redux/modules/auth.js","lib/api/plan.js"],"names":["ProtectedRoute","children","navigate","useNavigate","userState","useSelector","user","alertToLogin","useCallback","alert","location","reload","useEffect","a","refresh","res","data","status","Spinner","SignUpPage","lazy","LoginPage","CanvasMainPage","MyMainPage","NoticeMainPage","NotFoundPage","LandingPage","SearchPage","GlobalStyle","createGlobalStyle","props","isScroll","css","Modal","setAppElement","App","scrollY","useState","setScrollY","listener","window","pageYOffset","addEventListener","removeEventListener","useScroll","fallback","useRoutes","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","planSaga","createRequestActionTypes","GET_PLAN","GET_PLAN_SUCCESS","GET_PLAN_FAILURE","getPlansSaga","createAction","createRequestSaga","planAPI","takeLatest","plan","handleActions","state","payload","planError","error","rootSaga","all","authSaga","userSaga","rootReducer","combineReducers","auth","loading","axios","interceptors","response","use","resp","console","log","message","includes","authAPI","defaults","headers","common","authorization","config","withCredentials","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","dispatch","check","e","loadUser","ReactDOM","render","document","getElementById","type","request","SUCCESS","FAILURE","action","put","startLoading","call","finishLoading","login","userName","password","post","signup","email","nickName","birthday","gender","userCheck","get","logout","checkUserName","checkNickName","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","checkSaga","logoutSaga","result","checkError","START_LOADING","FINISH_LOADING","requestType","Container","styled","div","palette","back2","flag","SpinnerStyle","red1","gray","cyan","landing","landingThumbnail","back1","border1","red","red2","CHANGE_FIELD","INITIALIZE_FORM","TEMP_SET_AUTH","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","USERNAME","USERNAME_SUCCESS","USERNAME_FAILURE","NICKNAME","NICKNAME_SUCCESS","NICKNAME_FAILURE","changeField","form","key","value","initializeForm","tempSetAuth","signupSaga","loginSaga","checkUserNameSaga","checkNickNameSaga","initialState","passwordCheck","authError","userNameValid","nickNameValid","produce","draft","me","createPlan","userPlan","planForm","getPlan","id","getConcpet","postPlan","postConcept","conceptForm","postPlanDay","dayForm","travelDay","updatePlanDay","getPlanDay"],"mappings":"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","file":"static/js/main.e0288979.chunk.js","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { refresh } from 'lib/api/auth';\r\nimport Spinner from 'lib/custom/Spinner';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const { userState } = useSelector(({ user }) => ({\r\n    userState: user.userState,\r\n  }));\r\n\r\n  const alertToLogin = useCallback(() => {\r\n    alert('로그인 후 사용가능한 서비스입니다 !');\r\n    navigate(process.env.PUBLIC_URL + '/login');\r\n    // eslint-disable-next-line no-restricted-globals\r\n    location.reload();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let res = await refresh();\r\n      if (!res.data) {\r\n        alertToLogin();\r\n        return;\r\n      } else if (res.data.status === 201) {\r\n        return;\r\n      } else {\r\n        alertToLogin();\r\n        return;\r\n      }\r\n    })();\r\n  }, [alertToLogin]);\r\n\r\n  if (!userState) return <Spinner />;\r\n  else return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { useScroll } from 'lib/custom/useScroll';\r\nimport { createGlobalStyle, css } from 'styled-components';\r\nimport Modal from 'react-modal';\r\nimport ProtectedRoute from 'lib/router/ProtectedRoute';\r\nimport Spinner from 'lib/custom/Spinner';\r\n\r\n// router lazy 적용\r\n\r\nconst SignUpPage = lazy(() => import('pages/AuthPages/SignupPage'));\r\nconst LoginPage = lazy(() => import('pages/AuthPages/LoginPage'));\r\nconst CanvasMainPage = lazy(() => import('pages/CanvasPages/CanvasMainPage'));\r\nconst MyMainPage = lazy(() => import('pages/MyPages/MyMainPage'));\r\nconst NoticeMainPage = lazy(() => import('pages/NoticePages/NoticeMainPage'));\r\nconst NotFoundPage = lazy(() => import('pages/OtherPages/NotFoundPage'));\r\nconst LandingPage = lazy(() => import('pages/OtherPages/LandingPage'));\r\nconst SearchPage = lazy(() => import('pages/OtherPages/SearchPage'));\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body::-webkit-scrollbar {\r\n    display: none;\r\n    ${(props) =>\r\n      props.isScroll &&\r\n      css`\r\n        display: block;\r\n      `}\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const { scrollY } = useScroll();\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<Spinner />}>\r\n        {useRoutes([\r\n          { path: process.env.PUBLIC_URL + '/', element: <LandingPage /> },\r\n          { path: process.env.PUBLIC_URL + '/signup', element: <SignUpPage /> },\r\n          { path: process.env.PUBLIC_URL + '/login', element: <LoginPage /> },\r\n          {\r\n            path: process.env.PUBLIC_URL + '/canvas/*',\r\n            element: (\r\n              <ProtectedRoute>\r\n                <CanvasMainPage />\r\n              </ProtectedRoute>\r\n            ),\r\n          },\r\n          {\r\n            path: process.env.PUBLIC_URL + '/notice/*',\r\n            element: <NoticeMainPage />,\r\n          },\r\n          {\r\n            path: process.env.PUBLIC_URL + '/mypage/*',\r\n            element: (\r\n              <ProtectedRoute>\r\n                <MyMainPage />\r\n              </ProtectedRoute>\r\n            ),\r\n          },\r\n          {\r\n            path: process.env.PUBLIC_URL + '/search',\r\n            element: <SearchPage />,\r\n          },\r\n          {\r\n            path: process.env.PUBLIC_URL + '*',\r\n            element: <NotFoundPage />,\r\n          },\r\n        ])}\r\n      </Suspense>\r\n      <GlobalStyle isScroll={scrollY} />\r\n    </>\r\n  );\r\n}\r\n\r\nModal.setAppElement('#root'); // Modal 사용을 위해 붙임\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useScroll() {\r\n  const [scrollY, setScrollY] = useState(0);\r\n\r\n  const listener = () => {\r\n    setScrollY(window.pageYOffset);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', listener);\r\n    return () => window.removeEventListener('scroll', listener);\r\n  });\r\n\r\n  return {\r\n    scrollY,\r\n  };\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from 'lib/redux/createRequestSaga';\r\nimport * as planAPI from 'lib/api/plan';\r\n\r\nconst [GET_PLAN, GET_PLAN_SUCCESS, GET_PLAN_FAILURE] =\r\n  createRequestActionTypes('plan/GET_PLAN');\r\n\r\nexport const getPlan = createAction(GET_PLAN);\r\n\r\nexport const getPlansSaga = createRequestSaga(GET_PLAN, planAPI.getPlan);\r\nexport function* planSaga() {\r\n  yield takeLatest(GET_PLAN, getPlansSaga);\r\n}\r\n\r\n// 초기값\r\nconst initialState = {\r\n  plan: null,\r\n  planError: null,\r\n};\r\n\r\nconst plan = handleActions(\r\n  {\r\n    // plan 가져오기 성공\r\n    [GET_PLAN_SUCCESS]: (state, { payload: plan }) => ({\r\n      ...state,\r\n      plan,\r\n      planError: null,\r\n    }),\r\n    //  plan 가져오기 실패\r\n    [GET_PLAN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      planError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default plan;\r\n\r\n// 사용X\r\n","import { all } from '@redux-saga/core/effects';\r\nimport { combineReducers } from 'redux';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport plan, { planSaga } from './plan';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  loading,\r\n  user,\r\n  plan\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), planSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\nimport * as authAPI from 'lib/api/auth';\r\n\r\nlet refresh = false; // 무한 루프 방지\r\n\r\n// axios response error시 인터셉터 발생, refresh 토큰 으로 access 발급\r\naxios.interceptors.response.use(\r\n  (resp) => resp,\r\n  async (error) => {\r\n    if (!refresh) {\r\n      console.log(error);\r\n      if (\r\n        error.response.data.message.includes('AccessToken') ||\r\n        error.response.status === 500\r\n      ) {\r\n        refresh = true;\r\n        const response = await authAPI.refresh(); // new AccessToken\r\n        if (response.status === 201) {\r\n          axios.defaults.headers.common['authorization'] =\r\n            response.headers.authorization;\r\n          return axios(error.config);\r\n        }\r\n      }\r\n    }\r\n    refresh = false;\r\n    return error;\r\n  },\r\n);\r\n\r\n// https://www.youtube.com/watch?v=VJLSaq1Ll0U\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer, { rootSaga } from 'lib/redux/modules';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport axios from 'axios';\r\nimport { check } from 'lib/redux/modules/user';\r\nimport './lib/interceptors/axios';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nfunction loadUser() {\r\n  try {\r\n    store.dispatch(check());\r\n  } catch (e) {\r\n    console.log('not working');\r\n  }\r\n}\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from 'lib/redux/modules/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type)); // 로딩 시작\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type)); // 로딩 끝\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\n// 로그인\r\nexport const login = async ({ userName, password }) => {\r\n  const response = await axios.post('/api/login', { userName, password });\r\n  axios.defaults.headers.common['authorization'] =\r\n    response.headers.authorization;\r\n  return response;\r\n};\r\n\r\n// 회원가입\r\nexport const signup = async ({\r\n  userName,\r\n  email,\r\n  password,\r\n  nickName,\r\n  birthday,\r\n  gender,\r\n}) => {\r\n  try {\r\n    const res = await axios.post('/api/signup', {\r\n      userName,\r\n      email,\r\n      password,\r\n      nickName,\r\n      birthday,\r\n      gender,\r\n    });\r\n    if (res.status === 201 || res.status === 200) {\r\n      return res;\r\n    }\r\n    if (res.response.status === 400) {\r\n      return res.response;\r\n    }\r\n    return res;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n\r\n// accessToken으로 user 정보 업데이트\r\nexport const userCheck = async () => {\r\n  const response = await axios.get('/auth/status');\r\n  return response;\r\n};\r\n\r\n// refreshToken으로 accessToken 업데이트\r\nexport const refresh = async () => {\r\n  const response = await axios.get('/auth/refresh');\r\n  return response;\r\n};\r\n\r\n// 로그아웃\r\nexport const logout = async () => {\r\n  const response = await axios.post('/members/logout');\r\n  // eslint-disable-next-line no-restricted-globals\r\n  location.reload();\r\n  return response;\r\n};\r\n\r\nexport const checkUserName = async ({ userName }) => {\r\n  const response = await axios.get(`/api/username/${userName}`);\r\n  return response;\r\n};\r\n\r\nexport const checkNickName = async ({ nickName }) => {\r\n  const response = await axios.get(`/api/nickname/${nickName}`);\r\n  return response;\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from 'lib/redux/createRequestSaga';\r\nimport * as authAPI from 'lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; //새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] =\r\n  createRequestActionTypes('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(\r\n  TEMP_SET_USER,\r\n  (userState) => userState,\r\n);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.userCheck);\r\nconst logoutSaga = createRequestSaga(LOGOUT, authAPI.logout);\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  userState: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: userState }) => ({\r\n      ...state,\r\n      userState,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        userState: action.payload.data.result, // nickName\r\n        checkError: null,\r\n      };\r\n    },\r\n    [CHECK_FAILURE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        userState: null,\r\n        checkError: action.payload.error,\r\n      };\r\n    },\r\n    [LOGOUT]: (state) => {\r\n      return {\r\n        ...state,\r\n        userState: null,\r\n      };\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입을 payload로 설정합니다. (예: \"sample/GET_POST\")\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from 'lib/styles/palette';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${palette.back2};\r\n  ${(props) =>\r\n    props.flag &&\r\n    css`\r\n      height: 100%;\r\n      width: 100%;\r\n    `}\r\n`;\r\n\r\nconst SpinnerStyle = styled.div`\r\n  border: 10px solid white;\r\n  border-top: 10px solid ${palette.red1};\r\n  border-radius: 50%;\r\n  width: 80px;\r\n  height: 80px;\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Spinner = ({ flag }) => {\r\n  return (\r\n    <Container flag={flag}>\r\n      <SpinnerStyle></SpinnerStyle>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  landing: '#ffd0c0',\r\n  landingThumbnail: '#85cfc2cc',\r\n  back1: '#f6f6f8',\r\n  back2: '#e5e7e8',\r\n  border1: '#ddddde',\r\n  red: '#f16b6c',\r\n  red1: '#f75d5d',\r\n  red2: '#e14040',\r\n};\r\n\r\nexport default palette;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  takeLatest,\r\n  // call\r\n} from 'redux-saga/effects';\r\nimport produce from 'immer';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from 'lib/redux/createRequestSaga';\r\nimport * as authAPI from 'lib/api/auth';\r\n\r\n// 액션 생성\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD'; // input 값 변화 감지\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\nconst TEMP_SET_AUTH = 'auth/TEMP_SET_AUTH'; //새로고침 이후 임시 로그인 처리\r\nconst [SIGNUP, SIGNUP_SUCCESS, SIGNUP_FAILURE] =\r\n  createRequestActionTypes('auth/SIGNUP'); // 회원가입\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] =\r\n  createRequestActionTypes('auth/LOGIN'); // 로그인\r\nconst [USERNAME, USERNAME_SUCCESS, USERNAME_FAILURE] =\r\n  createRequestActionTypes('auth/USERNAME'); // 아이디 중복 검증\r\nconst [NICKNAME, NICKNAME_SUCCESS, NICKNAME_FAILURE] =\r\n  createRequestActionTypes('auth/NICKNAME'); // 닉네임 중복 검증\r\n\r\n// createAction(타입, 현재 상태)\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // login, signup\r\n    key, // userName, password, name ..\r\n    value,\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // signup, login\r\nexport const signup = createAction(\r\n  SIGNUP,\r\n  ({ userName, email, password, nickName, birthday, gender }) => ({\r\n    userName,\r\n    email,\r\n    password,\r\n    nickName,\r\n    birthday,\r\n    gender,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ userName, password }) => ({\r\n  userName,\r\n  password,\r\n}));\r\nexport const tempSetAuth = createAction(TEMP_SET_AUTH, (auth) => auth);\r\nexport const checkUserName = createAction(USERNAME, ({ userName }) => ({\r\n  userName,\r\n}));\r\nexport const checkNickName = createAction(NICKNAME, ({ nickName }) => ({\r\n  nickName,\r\n}));\r\n\r\n// 사가 생성\r\n// yield 비동기 통신\r\nconst signupSaga = createRequestSaga(SIGNUP, authAPI.signup);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst checkUserNameSaga = createRequestSaga(USERNAME, authAPI.checkUserName);\r\nconst checkNickNameSaga = createRequestSaga(NICKNAME, authAPI.checkNickName);\r\nexport function* authSaga() {\r\n  yield takeLatest(SIGNUP, signupSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(USERNAME, checkUserNameSaga);\r\n  yield takeLatest(NICKNAME, checkNickNameSaga);\r\n}\r\n\r\n// 초기값\r\nconst initialState = {\r\n  // 불변성 유지하면서 객체 수정\r\n  signup: {\r\n    userName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordCheck: '',\r\n    nickName: '',\r\n    birthday: '',\r\n    gender: '',\r\n  },\r\n  login: {\r\n    userName: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n  userNameValid: [-1, null], // [검증여부, 에러메시지]\r\n  nickNameValid: [-1, null],\r\n};\r\n\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (\r\n      state,\r\n      { payload: { form, key, value } }, // action 대신 구조분해, action.payload.form, key.. 호출\r\n    ) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value; // ex. state.signup.userName\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      authError: null, // 폼 전환 시 외원 인증 에러 초기화\r\n    }),\r\n    // 회원가입 성공\r\n    [SIGNUP_SUCCESS]: (state, action) => {\r\n      // 회원가입 status 별 다른 에러 출력을 위해 수정\r\n      if (action.payload.status === 400) {\r\n        return {\r\n          ...state,\r\n          auth: null,\r\n          authError: action.payload.data.message,\r\n        };\r\n      } else if (action.payload.status === 201) {\r\n        return {\r\n          ...state,\r\n          auth: action.payload.data,\r\n          authError: null,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          authError: action.payload.response.data.me,\r\n        };\r\n      }\r\n    },\r\n    // 회원가입 실패\r\n    [SIGNUP_FAILURE]: (state, { payload: error }) => {\r\n      return {\r\n        ...state,\r\n        authError: error,\r\n      };\r\n    },\r\n    // 로그인 성공\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => {\r\n      return {\r\n        ...state,\r\n        auth: auth.data.result,\r\n        authError: null,\r\n      };\r\n    },\r\n    // 로그인 실패\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => {\r\n      console.log(error);\r\n      return {\r\n        ...state,\r\n        authError: error,\r\n      };\r\n    },\r\n    // 회원가입후 auth 제거\r\n    [TEMP_SET_AUTH]: (state) => {\r\n      return {\r\n        ...state,\r\n        auth: null,\r\n      };\r\n    },\r\n    [USERNAME_SUCCESS]: (state, { payload: data }) => {\r\n      if (data.status === 200) {\r\n        return {\r\n          ...state,\r\n          userNameValid: [0, null],\r\n        };\r\n      } else if (data.response.status === 409) {\r\n        return {\r\n          ...state,\r\n          userNameValid: [1, data.response.data.message],\r\n        };\r\n      } else {\r\n        console.log('시스템 오류');\r\n        return;\r\n      }\r\n    },\r\n    [USERNAME_FAILURE]: (state) => {\r\n      return {\r\n        ...state,\r\n      };\r\n    },\r\n    [NICKNAME_SUCCESS]: (state, { payload: data }) => {\r\n      if (data.status === 200) {\r\n        return {\r\n          ...state,\r\n          nickNameValid: [0, null],\r\n        };\r\n      } else if (data.response.status === 409) {\r\n        return {\r\n          ...state,\r\n          nickNameValid: [1, data.response.data.message],\r\n        };\r\n      } else {\r\n        console.log('시스템 오류');\r\n        return;\r\n      }\r\n    },\r\n    [NICKNAME_FAILURE]: (state) => {\r\n      return {\r\n        ...state,\r\n      };\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import axios from 'axios';\r\n\r\n// 여행 설정 페이지, 여행 생성\r\nexport const createPlan = async (userPlan) => {\r\n  try {\r\n    const response = await axios.post('/members/plan', {\r\n      planForm: userPlan,\r\n    });\r\n    console.log('생성', response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// 여행 수정(여행보관함에서)\r\nexport const getPlan = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/members/plan/${id}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// 컨셉 받아오기\r\nexport const getConcpet = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/members/plan/${id}/concept`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// 여행 설정 수정\r\nexport const postPlan = async (id, userPlan) => {\r\n  try {\r\n    const response = await axios.post(`/members/plan/${id}`, userPlan);\r\n    console.log(`${id} 플랜수정: `, response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// 여행 설정 페이지 컨셉 수정\r\nexport const postConcept = async (id, conceptForm) => {\r\n  try {\r\n    const response = await axios.post(`/members/plan/${id}/concept`, {\r\n      conceptForm: conceptForm,\r\n    });\r\n    console.log(`${id} 컨셉수정: `, response);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// day 생성(post)\r\nexport const postPlanDay = async (dayForm, id) => {\r\n  try {\r\n    const response = await axios.post(`/members/plan/${id}/day`, {\r\n      dayForm: {\r\n        travelDay: dayForm.travelDay,\r\n      },\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// day 수정(put)\r\nexport const updatePlanDay = async (dayForm, id) => {\r\n  try {\r\n    const response = await axios.put(`/members/plan/${id}/day`, {\r\n      dayForm,\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n\r\n// day 조회\r\nexport const getPlanDay = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/members/plan/${id}/day`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return 0;\r\n  }\r\n};\r\n"],"sourceRoot":""}