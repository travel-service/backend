{"version":3,"sources":["lib/custom/responsive.js","components/Landing/Logo.js","components/Landing/Header.js","containers/common/HeaderContainer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/Responsive.js","components/common/NoticeButton.js","components/Notice/NoticeViewer.js","components/Notice/NoticeTemplate.js","pages/NoticePages/NoticeViewerPage.js","components/Notice/Pagination.js","components/Notice/NoticeList.js","pages/NoticePages/NoticeListPage.js","pages/NoticePages/NoticeMainPage.js"],"names":["Mobile","children","isMobile","useMediaQuery","query","Pc","isPc","PcTablet","TabletMobile","LogoContainer","styled","Link","props","auth","css","LogoImg","LogoLetter","img","Logo","to","alt","src","Container","div","type","palette","landing","back2","HeaderDiv","SubFlex","Menu","btnMenu","HoverProfile","back1","MenuEl","MenuBtn","MdMenu","Profile","HoverLink","Thumbnail","landingThumbnail","Header","userState","onLogout","useState","menu","setMenu","onClick","nickName","process","HeaderContainer","useSelector","user","dispatch","useDispatch","a","logout","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ResponsiveBlock","Responsive","rest","StyledButton","button","gray","Button","PostViewerBlock","PostHead","SubInfo","PostContent","PageHeader","NoticeViewer","test","setTest","loading","setLoading","numId","useParams","getData","axios","get","response","data","console","log","useEffect","viewList","filter","t","Number","Date","toLocaleDateString","dangerouslySetInnerHTML","__html","style","textDecoration","color","title","author","date","views","body","NoticeTemplateBlock","NoticeTemplate","NoticeViewerPage","Pagination","postsPerPage","totalPosts","paginate","pageNumber","Math","ceil","push","className","map","pageNum","PostListBlock","PostItemBlock","List","ListInfo","PageN","Listnum","PostDate","currentPage","setCurrentPage","reverse","indexOfLastPost","indexOfFirstPost","currentPosts","slice","postnum","PostItem","id","PostList","NoticeListPage","NoticeList","NoticeMainPage","element","path"],"mappings":"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","file":"static/js/18.7eeb4482.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nexport const Mobile = ({ children }) => {\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width:768px)',\r\n  });\r\n  return <>{isMobile && children}</>;\r\n};\r\n\r\nexport const Tablet = ({ children }) => {\r\n  const isTablet = useMediaQuery({\r\n    query: '(min-width:768px) and (max-width:1023px)',\r\n  });\r\n  return <>{isTablet && children}</>;\r\n};\r\n\r\nexport const Pc = ({ children }) => {\r\n  const isPc = useMediaQuery({\r\n    query: '(min-width:769px)',\r\n  });\r\n  return <>{isPc && children}</>;\r\n};\r\n\r\nexport const PcTablet = ({ children }) => {\r\n  const isPc = useMediaQuery({\r\n    query: '(min-width:1023px)',\r\n  });\r\n  return <>{isPc && children}</>;\r\n};\r\n\r\nexport const TabletMobile = ({ children }) => {\r\n  const isPc = useMediaQuery({\r\n    query: '(max-width:1023px)',\r\n  });\r\n  return <>{isPc && children}</>;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst LogoContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    !props.auth &&\r\n    css`\r\n      flex-direction: row;\r\n      ${LogoImg} {\r\n        width: 45px;\r\n        margin-bottom: 0px;\r\n        margin-right: 15px;\r\n      }\r\n\r\n      ${LogoLetter} {\r\n        height: 15px;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 120px;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst LogoLetter = styled.img`\r\n  height: 30px;\r\n`;\r\n\r\nconst Logo = ({ auth }) => {\r\n  return (\r\n    <LogoContainer to={process.env.PUBLIC_URL + '/'} auth={auth}>\r\n      <LogoImg\r\n        alt=\"LogoImage\"\r\n        src={process.env.PUBLIC_URL + '/images/logoPaintingV2.png'}\r\n      />\r\n      <LogoLetter\r\n        alt=\"LogoLetter\"\r\n        src={process.env.PUBLIC_URL + '/images/logoLetterV2.png'}\r\n      />\r\n    </LogoContainer>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdMenu } from 'react-icons/md';\r\nimport Logo from './Logo';\r\nimport palette from 'lib/styles/palette';\r\nimport { Pc, Mobile } from 'lib/custom/responsive';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  background-color: ${(props) =>\r\n    props.type === 'landing' ? palette.landing : palette.back2};\r\n`;\r\n\r\nconst HeaderDiv = styled.div`\r\n  max-width: 1200px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 30px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SubFlex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  @media screen and (max-width: 767px) {\r\n    display: block;\r\n    ${(props) =>\r\n      !props.btnMenu &&\r\n      css`\r\n        display: none;\r\n      `}\r\n  }\r\n`;\r\n\r\nconst HoverProfile = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background-color: ${palette.back1};\r\n  top: 60px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst MenuEl = styled(Link)`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n  padding: 10px 20px;\r\n  font-size: 17px;\r\n  font-weight: 550;\r\n\r\n  text-decoration: none;\r\n  /* text-underline-position: under; */\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 13px;\r\n    margin-left: 0px;\r\n    width: 100%;\r\n    text-align: center;\r\n    :hover {\r\n      transition: all 0.15s linear;\r\n      background-color: white;\r\n      border-radius: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MenuBtn = styled(MdMenu)`\r\n  display: none;\r\n  @media screen and (max-width: 767px) {\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 17px;\r\n  font-weight: 550;\r\n  :hover {\r\n    ${HoverProfile} {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HoverLink = styled(Link)`\r\n  width: 100%;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  font-weight: 450;\r\n  color: black;\r\n  padding: 15px;\r\n  text-align: center;\r\n  :hover {\r\n    background: ${palette.back2};\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Thumbnail = styled.img`\r\n  padding: 5px;\r\n  width: 45px;\r\n  height: 45px;\r\n  background-color: ${palette.landingThumbnail};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Header = ({ userState, onLogout, type }) => {\r\n  const [menu, setMenu] = useState(false);\r\n  // const location = useLocation();\r\n\r\n  const btnClick = () => {\r\n    setMenu(!menu);\r\n  };\r\n\r\n  return (\r\n    <Container type={type}>\r\n      <HeaderDiv>\r\n        <SubFlex>\r\n          <Logo />\r\n          <MenuBtn onClick={btnClick} />\r\n        </SubFlex>\r\n        <Menu btnMenu={menu}>\r\n          {userState ? (\r\n            <>\r\n              <MenuEl to={process.env.PUBLIC_URL + '/canvas/directory'}>\r\n                여행보관함\r\n              </MenuEl>\r\n              <Pc>\r\n                <Profile>\r\n                  <Thumbnail\r\n                    src={process.env.PUBLIC_URL + '/images/face1.png'}\r\n                    alt=\"\"\r\n                  />\r\n                  {userState.nickName}\r\n                  <HoverProfile>\r\n                    <HoverLink to={process.env.PUBLIC_URL + '/mypage/MyInfo'}>\r\n                      마이페이지\r\n                    </HoverLink>\r\n                    <HoverLink to={process.env.PUBLIC_URL} onClick={onLogout}>\r\n                      로그아웃\r\n                    </HoverLink>\r\n                  </HoverProfile>\r\n                </Profile>\r\n              </Pc>\r\n\r\n              <Mobile>\r\n                <MenuEl to={process.env.PUBLIC_URL + '/mypage/MyInfo'}>\r\n                  마이페이지\r\n                </MenuEl>\r\n                <MenuEl to={process.env.PUBLIC_URL} onClick={onLogout}>\r\n                  로그아웃\r\n                </MenuEl>\r\n              </Mobile>\r\n              <MenuEl to={process.env.PUBLIC_URL + '/notice'}>공지사항</MenuEl>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <MenuEl to={process.env.PUBLIC_URL + '/signup'}>회원가입</MenuEl>\r\n              <MenuEl to={process.env.PUBLIC_URL + '/login'}>로그인</MenuEl>\r\n              <MenuEl to={process.env.PUBLIC_URL + '/notice'}>공지사항</MenuEl>\r\n            </>\r\n          )}\r\n        </Menu>\r\n      </HeaderDiv>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from 'components/Landing/Header';\r\nimport { logout } from 'lib/redux/modules/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst HeaderContainer = ({ type }) => {\r\n  const { userState } = useSelector(({ user }) => ({\r\n    userState: user.userState,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const onLogout = async () => {\r\n    dispatch(logout());\r\n  };\r\n  return <Header userState={userState} onLogout={onLogout} type={type} />;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  width: 1024px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 768px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport palette from \"lib/styles/palette\";\r\n\r\nconst StyledButton = styled.button`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    \r\n    a:visited {\r\n        color: white;\r\n    }\r\n    \r\n    background:${palette.gray[8]};\r\n        &:hover{\r\n            background:${palette.gray[6]};\r\n        }\r\n`;\r\n\r\nconst Button = props => <StyledButton {...props}/>;\r\n\r\nexport default Button;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from 'lib/styles/palette';\r\nimport Responsive from 'components/common/Responsive';\r\nimport Button from 'components/common/NoticeButton';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${palette.gray[2]};\r\n  padding-bottom: 1rem;\r\n  margin-bottom: 1rem;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst SubInfo = styled.div`\r\n  margin-top: 1rem;\r\n  color: ${palette.gray[6]};\r\n\r\n  span + span:before {\r\n    color: ${palette.gray[5]};\r\n    padding-left: 0.25rem;\r\n    padding-right: 0.25rem;\r\n    content: '\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  font-size: 1.3125rem;\r\n  color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PageHeader = styled.div`\r\n  text-align: center;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n`;\r\n\r\nconst NoticeViewer = () => {\r\n  const [test, setTest] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { numId } = useParams();\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/notices');\r\n      setTest(response.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <PostViewerBlock>Loading...</PostViewerBlock>;\r\n  }\r\n\r\n  if (!test) return null;\r\n\r\n  const viewList = test.filter((t) => t.numId === Number(numId));\r\n  console.log(viewList);\r\n  if (!viewList[0]) {\r\n    return (\r\n      <>\r\n        {test && console.log(test)}\r\n        <PostViewerBlock>\r\n          <PageHeader>\r\n            <h1>공지사항</h1>\r\n          </PageHeader>\r\n          <PostHead>\r\n            <h2>존재하지 않는 공지사항 입니다.</h2>\r\n            <SubInfo>\r\n              <span>\r\n                <b>관리자</b>\r\n              </span>\r\n              <span>{new Date().toLocaleDateString()}</span>\r\n              <span>null</span>\r\n            </SubInfo>\r\n          </PostHead>\r\n          <PostContent\r\n            dangerouslySetInnerHTML={{\r\n              __html: '<p>존재하지 <b>않는</b> 공지사항입니다.</p>',\r\n            }}\r\n          />\r\n          <Button>\r\n            <Link\r\n              style={{ textDecoration: 'none', color: 'white' }}\r\n              to={process.env.PUBLIC_URL + '/notice'}\r\n            >\r\n              목록으로 돌아가기\r\n            </Link>\r\n          </Button>\r\n        </PostViewerBlock>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (test && viewList) {\r\n    const { title, author, date, views, body } = viewList[0];\r\n    return (\r\n      <>\r\n        <PostViewerBlock>\r\n          <PageHeader>\r\n            <h1>공지사항</h1>\r\n          </PageHeader>\r\n          <PostHead>\r\n            <h2>{title}</h2>\r\n            <SubInfo>\r\n              <span>\r\n                <b>{author}</b>\r\n              </span>\r\n              <span>{date}</span>\r\n              <span>{views}</span>\r\n            </SubInfo>\r\n          </PostHead>\r\n          <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n\r\n          <Button>\r\n            <Link\r\n              style={{ textDecoration: 'none', color: 'white' }}\r\n              to={process.env.PUBLIC_URL + '/notice'}\r\n            >\r\n              목록\r\n            </Link>\r\n          </Button>\r\n        </PostViewerBlock>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NoticeViewer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport HeaderContainer from 'containers/common/HeaderContainer';\r\n\r\nconst NoticeTemplateBlock = styled.div`\r\n  height: 100%;\r\n  flex-direction: row;\r\n  background-color: #ffd0c0;\r\n`;\r\n\r\nconst NoticeTemplate = ({ children }) => {\r\n  return (\r\n    <NoticeTemplateBlock>\r\n      <HeaderContainer type=\"landing\" />\r\n      {children}\r\n    </NoticeTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default NoticeTemplate;\r\n","import React from 'react';\r\nimport NoticeViewer from 'components/Notice/NoticeViewer';\r\nimport NoticeTemplate from 'components/Notice/NoticeTemplate';\r\n\r\nconst NoticeViewerPage = () => {\r\n  return (\r\n    <NoticeTemplate>\r\n      <NoticeViewer />\r\n    </NoticeTemplate>\r\n  );\r\n};\r\n\r\nexport default NoticeViewerPage;\r\n","import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumber = [];\r\n\r\n  // Math.ceil: 올림\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {pageNumber.map((pageNum) => (\r\n        <li\r\n          key={pageNum}\r\n          className=\"pagination_item\"\r\n          onClick={() => paginate(pageNum)}\r\n        >\r\n          {pageNum}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from 'components/common/Responsive';\r\nimport palette from 'lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Pagination from 'components/Notice/Pagination';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PageHeader = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  &:first-child {\r\n    padding-top: 1rem;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[2]};\r\n  }\r\n\r\n  h2 {\r\n    font-size: 2rem;\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    &:hover {\r\n      color: ${palette.gray[6]};\r\n    }\r\n  }\r\n  p {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\n/*list_tit: color: #ababab;*/\r\nconst List = styled.div`\r\n  padding: 3rem;\r\n  margin: 20px 20px;\r\n  min-height: 1rem;\r\n  text-align: center;\r\n  .list_tit {\r\n    color: #808000;\r\n  }\r\n  .list_grid {\r\n    display: grid;\r\n    grid-template-columns: 10% 60% 10% 10% 10%;\r\n  }\r\n  .list_data {\r\n    line-height: 40px;\r\n  }\r\n  .title {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst ListInfo = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  background-color: #f6f6f6;\r\n  border-bottom: solid 1px #ababab;\r\n`;\r\n\r\nconst PageN = styled.div`\r\n  .pagincon {\r\n    text-align: center;\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n  }\r\n  .pagincon li {\r\n    list-style: none;\r\n    padding: 10px;\r\n    margin: 1px;\r\n    border-radius: 30px;\r\n    border: 1px solid #dedede;\r\n  }\r\n  .pagination li {\r\n    display: inline-block;\r\n    background: none;\r\n    font-weight: bold;\r\n    overflow: hidden;\r\n    :hover {\r\n      background-color: #ffa8a8;\r\n      border: 1px solid #ffc9c9;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Listnum = styled.div`\r\n  .postnum {\r\n    display: flex;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst PostDate = () => {\r\n  const [test, setTest] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/notices');\r\n      setTest(response.data.reverse());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = test.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <PostItem test={currentPosts} loading={loading} postnum={test.length} />\r\n      <PageN>\r\n        <div className=\"pagincon\">\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={test.length}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      </PageN>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostItem = ({ test, loading, postnum }) => {\r\n  if (loading) {\r\n    return <PostItemBlock>Loading...</PostItemBlock>;\r\n  }\r\n\r\n  if (!test) return null;\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <Listnum>\r\n          <div className=\"postnum\">\r\n            총 <b style={{ color: `#808000 ` }}>{postnum}</b>\r\n            건의 글이 등록되었습니다.\r\n          </div>\r\n        </Listnum>\r\n        <ListInfo>\r\n          <div className=\"list_grid list_tit\">\r\n            <div> 번호 </div>\r\n            <div> 제목 </div>\r\n            <div> 작성자 </div>\r\n            <div> 작성일 </div>\r\n            <div> 조회수 </div>\r\n          </div>\r\n        </ListInfo>\r\n        {test.map((t) => (\r\n          <PostItemBlock key={t.id}>\r\n            <div className=\"list_grid\">\r\n              <div>{t.numId}</div>\r\n              <div className=\"title\">\r\n                <Link\r\n                  style={{ textDecoration: 'none', color: 'black' }}\r\n                  to={process.env.PUBLIC_URL + `/notice/${t.numId}`}\r\n                >\r\n                  <b>{t.title}</b>\r\n                </Link>\r\n              </div>\r\n              <div>{t.author}</div>\r\n              <div>{t.date}</div>\r\n              <div>{t.views}</div>\r\n            </div>\r\n          </PostItemBlock>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostList = () => {\r\n  return (\r\n    <PostListBlock>\r\n      <PageHeader>\r\n        <h1>공지사항</h1>\r\n      </PageHeader>\r\n      <PostItem />\r\n      <PostDate />\r\n    </PostListBlock>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\nimport NoticeList from 'components/Notice/NoticeList';\r\nimport NoticeTemplate from 'components/Notice/NoticeTemplate';\r\n\r\nconst NoticeListPage = () => {\r\n  return (\r\n    <NoticeTemplate>\r\n      <NoticeList />\r\n    </NoticeTemplate>\r\n  );\r\n};\r\n\r\nexport default NoticeListPage;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport NoticeViewerPage from './NoticeViewerPage';\r\nimport NoticeListPage from './NoticeListPage';\r\n\r\nconst NoticeMainPage = () => {\r\n  return (\r\n    <Routes>\r\n      <Route element={<NoticeListPage />} path=\"/\" />\r\n      <Route element={<NoticeViewerPage />} path=\"/:numId\" />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default NoticeMainPage;\r\n"],"sourceRoot":""}