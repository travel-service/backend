{"version":3,"sources":["components/Landing/Logo.js","lib/styles/styleUtils.js","components/common/Button.js","components/Auth/AuthTemplate.js","components/Auth/AuthForm.js","containers/Auth/LoginForm.js","pages/AuthPages/LoginPage.js"],"names":["LogoContainer","styled","Link","props","auth","css","LogoImg","LogoLetter","img","Logo","to","alt","src","weight","sizes","wide","desktop","tablet","phone","Object","keys","reduce","acc","label","buttonStyle","backColor","fullWidth","StyledButton","button","StyledLink","Button","AuthTemplateBlock","div","WhiteBox","Div","Main","Illustration","plane","traveler","MainCharacter","AuthLogo","AuthTemplate","children","AuthFormBlock","H2","h2","Form","form","LoginInputContainer","palette","back2","SpanRed","span","detail","StyledDiv","InputHeader","InputDiv","red1","StyledInput","input","gray","Select","select","Footer","Links","ButtonWidthMarginTop","Input","IconStyle","AccountIcon","MdAccountCircle","LockIcon","MdLock","FlexBox","textMap","login","signup","ErrorMessage","AuthForm","type","onChange","onSubmit","error","onBlur","detailErr","checkValue","text","autoComplete","name","placeholder","value","userName","maxLength","minLength","onClick","e","message","status","password","passwordCheck","nickName","birthday","gender","email","size","LoginForm","useState","setError","navigate","useNavigate","dispatch","useDispatch","useSelector","user","authError","userState","useCallback","target","changeField","key","useEffect","initializeForm","check","preventDefault","LoginPage"],"mappings":"yJAIMA,EAAgBC,YAAOC,IAAPD,CAAH,oIAKf,SAACE,GAAD,OACCA,EAAMC,MACPC,YADA,gNAGIC,EAMAC,MAMFD,EAAUL,IAAOO,IAAV,qEAKPD,EAAaN,IAAOO,IAAV,6CAmBDC,IAfF,SAAC,GAAc,IAAZL,EAAW,EAAXA,KACd,OACE,eAACJ,EAAD,CAAeU,GAA6B,IAAKN,KAAMA,EAAvD,UACE,cAACE,EAAD,CACEK,IAAI,YACJC,IAA8B,+BAEhC,cAACL,EAAD,CACEI,IAAI,aACJC,IAA8B,kC,6DCvBfC,E,sCAjBVC,EAAQ,CACnBC,KAAM,SACNC,QAAS,QACTC,OAAQ,QACRC,MAAO,S,GAGYC,OAAOC,KAAKN,GAAOO,QAAO,SAACC,EAAKC,GAMnD,OALAD,EAAIC,GAAS,kBAAalB,YAAZ,IAAD,0EACUS,EAAMS,GACvBlB,IAAG,WAAH,eAGCiB,IACN,I,MCZGE,EAAcnB,YAAH,0aDeMQ,ECCV,EDAK,CACdR,YADc,iHAIdA,YAJc,iHAOdA,YAPc,mHAUdA,YAVc,8HAcdA,YAdc,8HAoBDQ,KCbb,SAACV,GAAD,MACoB,UAApBA,EAAMsB,WACNpB,YADA,wFAMA,SAACF,GAAD,MACoB,UAApBA,EAAMsB,WACNpB,YADA,wFAME,SAACF,GAAD,OACFA,EAAMuB,WACNrB,YADA,gNAYEsB,EAAe1B,IAAO2B,OAAV,kCACdJ,GAGEK,EAAa5B,YAAOC,IAAPD,CAAH,kCACZuB,GAOWM,IAJA,SAAC3B,GACd,OAAOA,EAAMO,GAAK,cAACmB,EAAD,eAAgB1B,IAAY,cAACwB,EAAD,eAAkBxB,M,8FC5D5D4B,EAAoB9B,IAAO+B,IAAV,yLAUjBC,EAAWhC,IAAO+B,IAAV,0SAcRE,EAAMjC,IAAO+B,IAAV,6LAUHG,EAAOlC,IAAO+B,IAAV,yNAYJI,EAAenC,IAAO+B,IAAV,4CACd,SAAC7B,GAAD,OACAA,EAAMkC,OACNhC,YADA,uFAMA,SAACF,GAAD,OACAA,EAAMmC,UACNjC,YADA,4GAQEkC,EAAgBtC,IAAOO,IAAV,6FAMbgC,EAAWvC,IAAO+B,IAAV,yEA8BCS,IAzBM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,eAACX,EAAD,WACE,cAACE,EAAD,UACE,eAACC,EAAD,WACE,cAACM,EAAD,UACE,cAAC,IAAD,CAAMpC,KAAM,WAEbsC,OAGL,eAACP,EAAD,WACE,cAACC,EAAD,CAAcC,OAAK,EAAnB,SACE,cAACE,EAAD,CAAe3B,IAA8B,wBAE/C,cAACwB,EAAD,CAAcE,UAAQ,EAAtB,SACE,cAACC,EAAD,CACE3B,IAA8B,wC,6ICxFpC+B,EAAgB1C,IAAO+B,IAAV,4CAIbY,EAAK3C,IAAO4C,GAAV,oHAOFC,EAAO7C,IAAO8C,KAAV,4DAKJC,EAAsB/C,IAAO+B,IAAV,yRAEHiB,IAAQC,MAQFD,IAAQC,OAI9BC,EAAUlD,IAAOmD,KAAV,+KAQT,SAACjD,GAAD,OACAA,EAAMkD,QACNhD,YADA,uFAOEiD,EAAYrD,IAAO+B,IAAV,0LASTuB,EAActD,IAAO+B,IAAV,mKASXwB,EAAWvD,IAAO+B,IAAV,gaAcIiB,IAAQQ,MASpBC,EAAczD,IAAO0D,MAAV,mdAGKV,IAAQW,KAAK,GAaJX,IAAQW,KAAK,IAYtCC,EAAS5D,IAAO6D,OAAV,wUAIUb,IAAQW,KAAK,GAKJX,IAAQW,KAAK,IAUtCG,EAAS9D,IAAO+B,IAAV,yNASGiB,IAAQW,KAAK,IAKtBI,EAAQ/D,IAAO+B,IAAV,gFAKLiC,EAAuBhE,YAAO6B,IAAP7B,CAAH,iDAIpBiE,EAAQjE,IAAO0D,MAAV,mnBAuBLQ,EAAY9D,YAAH,+DAEJ4C,IAAQC,OAGbkB,EAAcnE,YAAOoE,IAAPpE,CAAH,kCACbkE,GAGEG,EAAWrE,YAAOsE,IAAPtE,CAAH,kCACVkE,GAGEK,EAAUvE,IAAO+B,IAAV,0OAITwB,EAIAF,GAUEmB,EAAU,CACdC,MAAO,qBACPC,OAAQ,4BAKJC,EAAe3E,IAAO+B,IAAV,yJAuNH6C,IA9ME,SAAC,GASX,IARLC,EAQI,EARJA,KACA/B,EAOI,EAPJA,KACAgC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEMC,EAAOZ,EAAQK,GAErB,OACE,mCACE,eAACnC,EAAD,WACE,cAACC,EAAD,UAAKyC,IAEJJ,GAAS,eAACL,EAAD,eAAgBK,KAG1B,eAACnC,EAAD,CAAMkC,SAAUA,EAAhB,UAEY,WAATF,GACC,qCACE,eAACxB,EAAD,WACE,cAACC,EAAD,iCACA,eAACC,EAAD,WACE,cAACE,EAAD,CACE4B,aAAa,WACbC,KAAK,WACLC,YAAY,6CACZT,SAAUA,EACVU,MAAO1C,EAAK2C,SACZR,OAAQA,EACRS,UAAU,KACVC,UAAU,MAEZ,wBAAQL,KAAK,WAAWM,QAAS,SAACC,GAAD,OAAOV,EAAWU,IAAnD,0CAIDX,EAAUO,SAASK,SAClB,eAAC5C,EAAD,CAASE,OAAsC,IAA9B8B,EAAUO,SAASM,OAApC,cACIb,EAAUO,SAASK,cAI3B,eAACzC,EAAD,WACE,cAACC,EAAD,uCACA,cAACC,EAAD,UACE,cAACE,EAAD,CACE4B,aAAa,eACbC,KAAK,WACLC,YAAY,yEACZV,KAAK,WACLC,SAAUA,EACVU,MAAO1C,EAAKkD,SACZf,OAAQA,EACRS,UAAU,KACVC,UAAU,QAGd,cAACzC,EAAD,kHACCgC,EAAUc,UACT,eAAC9C,EAAD,CAASE,QAAM,EAAf,cAAkB8B,EAAUc,eAGhC,eAAC3C,EAAD,WACE,cAACC,EAAD,oDACA,cAACC,EAAD,UACE,cAACE,EAAD,CACE4B,aAAa,eACbC,KAAK,gBACLC,YAAY,yEACZV,KAAK,WACLC,SAAUA,EACVU,MAAO1C,EAAKmD,cACZhB,OAAQA,MAGXC,EAAUe,eACT,eAAC/C,EAAD,CAASE,QAAM,EAAf,cAAkB8B,EAAUe,oBAGhC,eAAC5C,EAAD,WACE,cAACC,EAAD,iCACA,eAACC,EAAD,WACE,cAACE,EAAD,CACE6B,KAAK,WACLC,YAAY,4CACZV,KAAK,OACLC,SAAUA,EACVU,MAAO1C,EAAKoD,SACZjB,OAAQA,EACRS,UAAU,MAEZ,wBAAQJ,KAAK,WAAWM,QAAS,SAACC,GAAD,OAAOV,EAAWU,IAAnD,0CAIDX,EAAUgB,SAASJ,SAClB,eAAC5C,EAAD,CAASE,OAAsC,IAA9B8B,EAAUgB,SAASH,OAApC,cACIb,EAAUgB,SAASJ,cAI3B,eAACvB,EAAD,WACE,eAAClB,EAAD,WACE,cAACC,EAAD,sDACA,cAACC,EAAD,UACE,cAACE,EAAD,CACE6B,KAAK,WACLT,KAAK,OACLU,YAAY,aACZT,SAAUA,EACVU,MAAO1C,EAAKqD,SACZlB,OAAQA,EACRS,UAAU,KACVC,UAAU,WAIhB,eAACtC,EAAD,CAAW+C,QAAM,EAAjB,UACE,cAAC9C,EAAD,2BACA,cAACC,EAAD,UACE,eAACK,EAAD,CAAQ0B,KAAK,SAASR,SAAUA,EAAhC,UACE,wBAAQU,MAAM,GAAd,0BACA,wBAAQA,MAAM,OAAd,0BACA,wBAAQA,MAAM,SAAd,qCAKR,eAACnC,EAAD,WACE,cAACC,EAAD,iCACA,cAACC,EAAD,UACE,cAACE,EAAD,CACE6B,KAAK,QACLC,YAAY,qBACZV,KAAK,QACLC,SAAUA,EACVU,MAAO1C,EAAKuD,gBAQZ,UAATxB,GACC,mCACE,eAAC9B,EAAD,WACE,eAACQ,EAAD,WACE,cAACY,EAAD,CAAamC,KAAK,OAClB,cAACrC,EAAD,CACEoB,aAAa,WACbC,KAAK,WACLC,YAAY,2DACZT,SAAUA,EACVU,MAAO1C,EAAK2C,cAGhB,eAAClC,EAAD,WACE,cAACc,EAAD,CAAUiC,KAAK,OACf,cAACrC,EAAD,CACEoB,aAAa,eACbC,KAAK,WACLC,YAAY,iEACZT,SAAUA,EACVU,MAAO1C,EAAKkD,SACZnB,KAAK,qBAQf,cAACb,EAAD,CAAsBvC,WAAS,EAA/B,SACY,uBAAT2D,EAAA,UAAoBA,GAAS,mFAKlC,cAACtB,EAAD,UACY,UAATe,EACC,eAACd,EAAD,WACE,cAAC,IAAD,CAAMtD,GAA6B,UAAnC,sCACA,cAAC,IAAD,CAAMA,GAA6B,QAAnC,yEAKF,eAACsD,EAAD,WACE,cAAC,IAAD,CAAMtD,GAA6B,SAAnC,gCACA,cAAC,IAAD,CAAMA,GAA6B,QAAnC,kF,mHCnWC8F,EAnEG,WAAO,IAAD,EACIC,mBAAS,MADb,mBACfxB,EADe,KACRyB,EADQ,KAEhBC,EAAWC,cACXC,EAAWC,cAHK,EAIuBC,aAC3C,gBAAG3G,EAAH,EAAGA,KAAM4G,EAAT,EAASA,KAAT,MAAqB,CACnBjE,KAAM3C,EAAKsE,MACXtE,KAAMA,EAAKA,KACX6G,UAAW7G,EAAK6G,UAChBC,UAAWF,EAAKE,cALZnE,EAJc,EAIdA,KAAM3C,EAJQ,EAIRA,KAAM6G,EAJE,EAIFA,UAAWC,EAJT,EAISA,UAUzBnC,EAAWoC,uBACf,SAACrB,GAAO,IAAD,EACmBA,EAAEsB,OAAlB3B,EADH,EACGA,MAAOF,EADV,EACUA,KACfsB,EACEQ,YAAY,CACVtE,KAAM,QACNuE,IAAK/B,EACLE,aAIN,CAACoB,IA+BH,OApBAU,qBAAU,WACRV,EAASW,YAAe,YACvB,CAACX,IAEJU,qBAAU,WACJN,EACFP,EAAS,qHAGPtG,GACFyG,EAASY,iBAEV,CAACrH,EAAM6G,EAAWJ,EAAUF,IAE/BY,qBAAU,WACJL,GACFP,EAAkC,OAEnC,CAACO,EAAWP,IAGb,cAAC9B,EAAA,EAAD,CACEC,KAAK,QACL/B,KAAMA,EACNgC,SAAUA,EACVC,SAhCa,SAACc,GAChBA,EAAE4B,iBADoB,IAEdhC,EAAuB3C,EAAvB2C,SAAUO,EAAalD,EAAbkD,SAClBY,EAASnC,YAAM,CAAEgB,WAAUO,eA8BzBhB,MAAOA,KCzDE0C,UARG,WAChB,OACE,cAAClF,EAAA,EAAD,UACE,cAAC,EAAD","file":"static/js/14.2ece7a15.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst LogoContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    !props.auth &&\r\n    css`\r\n      flex-direction: row;\r\n      ${LogoImg} {\r\n        width: 45px;\r\n        margin-bottom: 0px;\r\n        margin-right: 15px;\r\n      }\r\n\r\n      ${LogoLetter} {\r\n        height: 15px;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  width: 120px;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst LogoLetter = styled.img`\r\n  height: 30px;\r\n`;\r\n\r\nconst Logo = ({ auth }) => {\r\n  return (\r\n    <LogoContainer to={process.env.PUBLIC_URL + '/'} auth={auth}>\r\n      <LogoImg\r\n        alt=\"LogoImage\"\r\n        src={process.env.PUBLIC_URL + '/images/logoPaintingV2.png'}\r\n      />\r\n      <LogoLetter\r\n        alt=\"LogoLetter\"\r\n        src={process.env.PUBLIC_URL + '/images/logoLetterV2.png'}\r\n      />\r\n    </LogoContainer>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { css } from 'styled-components';\r\n\r\n// 미디어 쿼리 헬퍼: https://www.styled-components.com/docs/advanced#media-templates 참조\r\nexport const sizes = {\r\n  wide: '1200px',\r\n  desktop: '992px',\r\n  tablet: '768px',\r\n  phone: '376px',\r\n};\r\n\r\nexport const media = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${sizes[label]}) {\r\n      ${css(...args)}\r\n    }\r\n  `;\r\n  return acc;\r\n}, {});\r\n\r\n// 그림자 효과: https://codepen.io/sdthornton/pen/wBZdXq 기반\r\nexport const shadow = (weight) => {\r\n  const shadows = [\r\n    css`\r\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    `,\r\n    css`\r\n      box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    `,\r\n    css`\r\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n    `,\r\n    css`\r\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n        0 10px 10px rgba(0, 0, 0, 0.22);\r\n    `,\r\n    css`\r\n      box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3),\r\n        0 15px 12px rgba(0, 0, 0, 0.22);\r\n    `,\r\n  ];\r\n\r\n  return shadows[weight];\r\n};\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { shadow } from 'lib/styles/styleUtils';\r\n\r\nconst buttonStyle = css`\r\n  border: 1px solid #e5e7e8;\r\n  border-radius: 5px;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n  height: 45px;\r\n  width: 93px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: 0.2s all;\r\n  background: white;\r\n\r\n  &:hover {\r\n    ${shadow(1)}\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(3px);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.backColor === 'white' &&\r\n    css`\r\n      background-color: white;\r\n      color: black;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.backColor === 'black' &&\r\n    css`\r\n      background-color: black;\r\n      color: white;\r\n    `}\r\n\r\n    ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      background-color: #f16b6c;\r\n      color: white;\r\n      width: 100%;\r\n      font-weight: 700;\r\n      font-size: 18px;\r\n      height: 55px;\r\n      border-radius: 10px;\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Logo from 'components/Landing/Logo';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: #fff1a9;\r\n  @media screen and (max-width: 767px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  width: 45%;\r\n  background: white;\r\n  border-radius: 0 45px 45px 0;\r\n  @media screen and (max-width: 1023px) {\r\n    width: 70%;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n    border-radius: 0px;\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  padding-bottom: 100px;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  width: 55%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  @media screen and (max-width: 767px) {\r\n    width: 0%;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Illustration = styled.div`\r\n  ${(props) =>\r\n    props.plane &&\r\n    css`\r\n      margin-top: 20px;\r\n      padding-left: 40px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.traveler &&\r\n    css`\r\n      position: relative;\r\n      text-align: center;\r\n      top: -30px;\r\n    `}\r\n`;\r\n\r\nconst MainCharacter = styled.img`\r\n  @media screen and (max-width: 1023px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst AuthLogo = styled.div`\r\n  margin-top: 50px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <WhiteBox>\r\n        <Div>\r\n          <AuthLogo>\r\n            <Logo auth={'true'} />\r\n          </AuthLogo>\r\n          {children}\r\n        </Div>\r\n      </WhiteBox>\r\n      <Main>\r\n        <Illustration plane>\r\n          <MainCharacter src={process.env.PUBLIC_URL + '/images/plane.png'} />\r\n        </Illustration>\r\n        <Illustration traveler>\r\n          <MainCharacter\r\n            src={process.env.PUBLIC_URL + '/images/mainCharacter.png'}\r\n          />\r\n        </Illustration>\r\n      </Main>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from 'lib/styles/palette';\r\nimport Button from 'components/common/Button';\r\nimport { MdAccountCircle, MdLock } from 'react-icons/md';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin: auto;\r\n  width: 80%;\r\n`;\r\n\r\nconst LoginInputContainer = styled.div`\r\n  width: 100%;\r\n  border: 2px solid ${palette.back2};\r\n  border-radius: 10px;\r\n  height: 120px;\r\n  display: grid;\r\n  /* display: flex; */\r\n  /* flex-direction: column; */\r\n  /* grid-template-rows: 1fr 1fr; */\r\n  div:last-child {\r\n    border-top: 2px solid ${palette.back2};\r\n  }\r\n`;\r\n\r\nconst SpanRed = styled.span`\r\n  display: flex;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  line-height: 13px;\r\n  color: blue;\r\n  margin-top: 5px;\r\n  ${(props) =>\r\n    props.detail &&\r\n    css`\r\n      color: red;\r\n      /* font-size: 0.95rem; */\r\n    `}\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  /* display: flex; */\r\n  /* align-items: center; */\r\n  position: relative;\r\n  /* justify-content: space-between; */\r\n  margin-bottom: 18px;\r\n  width: 100%;\r\n`;\r\n\r\nconst InputHeader = styled.div`\r\n  /* display: flex;\r\n  align-items: center; */\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InputDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  /* height: 35px; */\r\n  display: flex;\r\n  align-items: center;\r\n  /* border: 1px solid blue; */\r\n\r\n  button {\r\n    height: 35px;\r\n    margin-left: 10px;\r\n    width: 90px;\r\n    /* width: 100px; */\r\n    border-radius: 10px;\r\n    background: ${palette.red1};\r\n    border: none;\r\n    color: white;\r\n    font-weight: 550;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding-left: 20px;\r\n  font-size: 15px;\r\n  border: 1px solid ${palette.gray[5]};\r\n  border-radius: 8px;\r\n  outline: none;\r\n  /* width: 100%; */\r\n  flex: 1;\r\n  height: 35px;\r\n  float: right;\r\n\r\n  ::placeholder {\r\n    color: #c4c4c4;\r\n  }\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    /* height: 40px; */\r\n    padding-left: 10px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding-left: 30px;\r\n  font-size: 1rem;\r\n  border: 1px solid ${palette.gray[5]};\r\n  border-radius: 8px;\r\n  outline: none;\r\n  height: 35px;\r\n  &:focus {\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 20px;\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n    font-weight: 400;\r\n    font-size: 13px;\r\n    line-height: 16px;\r\n    &:hover {\r\n      color: ${palette.gray[8]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Links = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst ButtonWidthMarginTop = styled(Button)`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  height: 100%;\r\n  width: 100%;\r\n  border: none;\r\n  /* border-bottom: 1px solid #1890ff; */\r\n  outline: none;\r\n  /* height: 60%; */\r\n  border-radius: 5px;\r\n  padding: 0px 10px;\r\n  font-size: 15px;\r\n  font-weight: 550;\r\n  background: white;\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus,\r\n  input:-webkit-autofill:active {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-transition: background-color 9999s ease-out;\r\n    -webkit-box-shadow: 0 0 0px 1000px white inset !important;\r\n    -webkit-text-fill-color: #fff !important;\r\n  }\r\n`;\r\n\r\nconst IconStyle = css`\r\n  margin: 0px 20px;\r\n  color: ${palette.back2};\r\n`;\r\n\r\nconst AccountIcon = styled(MdAccountCircle)`\r\n  ${IconStyle}\r\n`;\r\n\r\nconst LockIcon = styled(MdLock)`\r\n  ${IconStyle}\r\n`;\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  gap: 40px;\r\n\r\n  ${InputDiv} {\r\n    height: auto;\r\n  }\r\n\r\n  ${StyledDiv} {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media screen and (max-width: 450px) {\r\n    /* flex-direction: column; */\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signup: '회원가입',\r\n};\r\n/**\r\n * 에러를 보여 줍니다.\r\n */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  onBlur,\r\n  detailErr,\r\n  checkValue,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  return (\r\n    <>\r\n      <AuthFormBlock>\r\n        <H2>{text}</H2>\r\n        {/* submit 에러 */}\r\n        {error && <ErrorMessage>*{error}</ErrorMessage>}\r\n\r\n        {/* 데이터 입력 폼(로그인, 회원가입) */}\r\n        <Form onSubmit={onSubmit}>\r\n          {/* 회원가입 폼 */}\r\n          {type === 'signup' && (\r\n            <>\r\n              <StyledDiv>\r\n                <InputHeader>아이디</InputHeader>\r\n                <InputDiv>\r\n                  <StyledInput\r\n                    autoComplete=\"username\"\r\n                    name=\"userName\"\r\n                    placeholder=\"아이디 (20자 이내)\"\r\n                    onChange={onChange}\r\n                    value={form.userName}\r\n                    onBlur={onBlur}\r\n                    maxLength=\"20\"\r\n                    minLength=\"4\"\r\n                  />\r\n                  <button name=\"userName\" onClick={(e) => checkValue(e)}>\r\n                    중복 확인\r\n                  </button>\r\n                </InputDiv>\r\n                {detailErr.userName.message && (\r\n                  <SpanRed detail={detailErr.userName.status === 1}>\r\n                    *{detailErr.userName.message}\r\n                  </SpanRed>\r\n                )}\r\n              </StyledDiv>\r\n              <StyledDiv>\r\n                <InputHeader>비밀번호</InputHeader>\r\n                <InputDiv>\r\n                  <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"비밀번호 (8자 이상, 20자 이내)\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    onBlur={onBlur}\r\n                    maxLength=\"20\"\r\n                    minLength=\"8\"\r\n                  />\r\n                </InputDiv>\r\n                <SpanRed>*영문자, 숫자, 특수문자 조합 8자리 이상</SpanRed>\r\n                {detailErr.password && (\r\n                  <SpanRed detail>*{detailErr.password}</SpanRed>\r\n                )}\r\n              </StyledDiv>\r\n              <StyledDiv>\r\n                <InputHeader>비밀번호 확인</InputHeader>\r\n                <InputDiv>\r\n                  <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"passwordCheck\"\r\n                    placeholder=\"비밀번호 (8자 이상, 20자 이내)\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    value={form.passwordCheck}\r\n                    onBlur={onBlur}\r\n                  />\r\n                </InputDiv>\r\n                {detailErr.passwordCheck && (\r\n                  <SpanRed detail>*{detailErr.passwordCheck}</SpanRed>\r\n                )}\r\n              </StyledDiv>\r\n              <StyledDiv>\r\n                <InputHeader>닉네임</InputHeader>\r\n                <InputDiv>\r\n                  <StyledInput\r\n                    name=\"nickName\"\r\n                    placeholder=\"닉네임 (8자 이내)\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    value={form.nickName}\r\n                    onBlur={onBlur}\r\n                    maxLength=\"8\"\r\n                  />\r\n                  <button name=\"nickName\" onClick={(e) => checkValue(e)}>\r\n                    중복 확인\r\n                  </button>\r\n                </InputDiv>\r\n                {detailErr.nickName.message && (\r\n                  <SpanRed detail={detailErr.nickName.status === 1}>\r\n                    *{detailErr.nickName.message}\r\n                  </SpanRed>\r\n                )}\r\n              </StyledDiv>\r\n              <FlexBox>\r\n                <StyledDiv>\r\n                  <InputHeader>생년월일 (선택)</InputHeader>\r\n                  <InputDiv>\r\n                    <StyledInput\r\n                      name=\"birthday\"\r\n                      type=\"text\"\r\n                      placeholder=\"YYYY/MM/DD\"\r\n                      onChange={onChange}\r\n                      value={form.birthday}\r\n                      onBlur={onBlur}\r\n                      maxLength=\"10\"\r\n                      minLength=\"8\"\r\n                    />\r\n                  </InputDiv>\r\n                </StyledDiv>\r\n                <StyledDiv gender>\r\n                  <InputHeader>성별</InputHeader>\r\n                  <InputDiv>\r\n                    <Select name=\"gender\" onChange={onChange}>\r\n                      <option value=\"\">선택</option>\r\n                      <option value=\"MALE\">남자</option>\r\n                      <option value=\"FEMALE\">여자</option>\r\n                    </Select>\r\n                  </InputDiv>\r\n                </StyledDiv>\r\n              </FlexBox>\r\n              <StyledDiv>\r\n                <InputHeader>이메일</InputHeader>\r\n                <InputDiv>\r\n                  <StyledInput\r\n                    name=\"email\"\r\n                    placeholder=\"ex. test@gmail.com\"\r\n                    type=\"email\"\r\n                    onChange={onChange}\r\n                    value={form.email}\r\n                  />\r\n                </InputDiv>\r\n              </StyledDiv>\r\n            </>\r\n          )}\r\n\r\n          {/* 로그인 폼 */}\r\n          {type === 'login' && (\r\n            <>\r\n              <LoginInputContainer>\r\n                <InputDiv>\r\n                  <AccountIcon size=\"35\" />\r\n                  <Input\r\n                    autoComplete=\"username\"\r\n                    name=\"userName\"\r\n                    placeholder=\"아이디를 입력하세요.\"\r\n                    onChange={onChange}\r\n                    value={form.userName}\r\n                  />\r\n                </InputDiv>\r\n                <InputDiv>\r\n                  <LockIcon size=\"35\" />\r\n                  <Input\r\n                    autoComplete=\"new-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"비밀번호를 입력하세요.\"\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                    type=\"password\"\r\n                  />\r\n                </InputDiv>\r\n              </LoginInputContainer>\r\n            </>\r\n          )}\r\n\r\n          {/* 로그인, 회원가입 버튼 */}\r\n          <ButtonWidthMarginTop fullWidth>\r\n            {text === '로그인' ? `${text}` : '이메일 본인인증 후 회원가입'}\r\n          </ButtonWidthMarginTop>\r\n        </Form>\r\n\r\n        {/* 다른 페이지 이동 버튼 */}\r\n        <Footer>\r\n          {type === 'login' ? (\r\n            <Links>\r\n              <Link to={process.env.PUBLIC_URL + '/signup'}>회원가입</Link>\r\n              <Link to={process.env.PUBLIC_URL + '/find'}>\r\n                아이디/비밀번호 찾기\r\n              </Link>\r\n            </Links>\r\n          ) : (\r\n            <Links>\r\n              <Link to={process.env.PUBLIC_URL + '/login'}>로그인</Link>\r\n              <Link to={process.env.PUBLIC_URL + '/find'}>\r\n                아이디/비밀번호 찾기\r\n              </Link>\r\n            </Links>\r\n          )}\r\n        </Footer>\r\n      </AuthFormBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AuthForm from 'components/Auth/AuthForm';\r\nimport { changeField, initializeForm, login } from 'lib/redux/modules/auth';\r\nimport { check } from 'lib/redux/modules/user';\r\n\r\nconst LoginForm = () => {\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, userState } = useSelector(\r\n    ({ auth, user }) => ({\r\n      form: auth.login, // store이름 auth, auth.signup에(회원 정보 목록 있음)\r\n      auth: auth.auth,\r\n      authError: auth.authError,\r\n      userState: user.userState,\r\n    }),\r\n  );\r\n\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(\r\n        changeField({\r\n          form: 'login',\r\n          key: name,\r\n          value,\r\n        }),\r\n      );\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { userName, password } = form;\r\n    dispatch(login({ userName, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 form 초기화\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      setError('아이디 또는 비밀번호를 잘못 입력했습니다.');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (userState) {\r\n      navigate(process.env.PUBLIC_URL + '/');\r\n    }\r\n  }, [userState, navigate]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport AuthTemplate from 'components/Auth/AuthTemplate';\r\nimport LoginForm from 'containers/Auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}